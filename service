#!/usr/bin/env python

from hosted import device, node, config
import time

# Restart service when config changes in dashboard
config.restart_on_update()

# Map button names to config keys
BUTTONS = {
    'power': config.gpio_power,
    'up': config.gpio_up,
    'down': config.gpio_down,
    'menu': config.gpio_menu,
    'select': config.gpio_select
}

# Monitor pins with pull-up resistors
for name, pin in BUTTONS.items():
    print("Monitoring %s on GPIO %d" % (name, pin))  # Debug
    device.gpio.monitor(pin, pull_up=True)

# Track state and debounce
last_state = {pin: True for pin in BUTTONS.values()}  # Assume initial high
last_event_time = {pin: 0 for pin in BUTTONS.values()}
debounce_delay = 0.2  # 200ms debounce

print("Service started - monitoring GPIO pins")  # Debug log

# Poll GPIO for changes
for pin, state in device.gpio.poll_forever():
    name = next((n for n, p in BUTTONS.items() if p == pin), None)
    now = time.time()
    if name and not state and last_state[pin] and now - last_event_time[pin] > debounce_delay:
        # Falling edge (press, active-low)
        print("Press detected on %s (pin %d)" % (name, pin))  # Debug
        node.send("%s:0" % name)  # Send to node.lua (e.g., "up:0")
        last_event_time[pin] = now
    last_state[pin] = state
